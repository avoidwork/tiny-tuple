{"version":3,"sources":["tiny-tuple.js"],"names":["_typeof","Symbol","iterator","obj","constructor","global","clone","arg","JSON","parse","stringify","flatten","tuple","result","forEach","i","Tuple","push","apply","Object","freeze","_len","arguments","length","args","Array","_key","this","map","isFrozen","factory","_len2","_key2","Function","prototype","bind","concat","extract","version","exports","module","define","amd","window"],"mappings":";;AASA,YAEA,IAAIA,SAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUC,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXF,SAAyBE,EAAIC,cAAgBH,OAAS,eAAkBE,KAE1O,SAAWE,GAEV,QAASC,GAAMC,GACd,MAAOC,MAAKC,MAAMD,KAAKE,UAAUH,IAGlC,QAASI,GAAQC,GAChB,GAAIC,KAUJ,OARAD,GAAME,QAAQ,SAAUC,GACnBA,YAAaC,OAChBH,EAAOI,KAAKC,MAAML,EAAQF,EAAQI,IAElCF,EAAOI,KAAKF,KAIPI,OAAOC,OAAOP,GAGtB,QAASG,SACR,IAAK,GAAIK,GAAOC,UAAUC,OAAQC,EAAOC,MAAMJ,GAAOK,EAAO,EAAUL,EAAPK,EAAaA,IAC5EF,EAAKE,GAAQJ,UAAUI,EAGxBC,MAAKV,KAAKC,MAAMS,KAAMH,EAAKI,IAAI,SAAUb,GACxC,MAAOA,aAAaC,OAAQD,EAA8D,YAA5C,mBAANA,GAAoB,YAAcf,QAAQe,KAAqBI,OAAOU,SAASd,GAA+BT,EAAMS,GAAhCI,OAAOC,OAAOd,EAAMS,OAGjJI,OAAOC,OAAOO,MAWf,QAASG,KACR,IAAK,GAAIC,GAAQT,UAAUC,OAAQC,EAAOC,MAAMM,GAAQC,EAAQ,EAAWD,EAARC,EAAeA,IACjFR,EAAKQ,GAASV,UAAUU,EAGzB,OAAO,KAAKC,SAASC,UAAUC,KAAKjB,MAAMF,OAAQ,MAAMoB,OAAOZ,KAbhER,MAAMkB,UAAU9B,YAAcY,MAC9BA,MAAMkB,UAAYT,MAAMS,UACxBlB,MAAMkB,UAAUjC,OAAOC,UAAYuB,MAAMS,UAAUjC,OAAOC,UAE1Dc,MAAMkB,UAAUG,QAAU,WACzB,MAAO1B,GAAQgB,OAWhBG,EAAQQ,QAAU,QAGK,mBAAZC,SACVC,OAAOD,QAAUT,EACW,kBAAXW,SAAyBA,OAAOC,IACjDD,OAAO,WACN,MAAOX,KAGRzB,EAAOO,MAAQkB,GAEI,mBAAXa,QAAyBA,OAAStC","file":"tiny-tuple.min.js","sourcesContent":["/**\n * Tiny tuple for Client or Server\n *\n * @author Jason Mulligan <jason.mulligan@avoidwork.com>\n * @copyright 2016\n * @license BSD-3-Clause\n * @link https://github.com/avoidwork/tiny-tuple\n * @version 1.0.8\n */\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n(function (global) {\n\n\tfunction clone(arg) {\n\t\treturn JSON.parse(JSON.stringify(arg));\n\t}\n\n\tfunction flatten(tuple) {\n\t\tvar result = [];\n\n\t\ttuple.forEach(function (i) {\n\t\t\tif (i instanceof Tuple) {\n\t\t\t\tresult.push.apply(result, flatten(i));\n\t\t\t} else {\n\t\t\t\tresult.push(i);\n\t\t\t}\n\t\t});\n\n\t\treturn Object.freeze(result);\n\t}\n\n\tfunction Tuple() {\n\t\tfor (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\targs[_key] = arguments[_key];\n\t\t}\n\n\t\tthis.push.apply(this, args.map(function (i) {\n\t\t\treturn i instanceof Tuple ? i : (typeof i === \"undefined\" ? \"undefined\" : _typeof(i)) === \"object\" && !Object.isFrozen(i) ? Object.freeze(clone(i)) : clone(i);\n\t\t}));\n\n\t\tObject.freeze(this);\n\t}\n\n\tTuple.prototype.constructor = Tuple;\n\tTuple.prototype = Array.prototype;\n\tTuple.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];\n\n\tTuple.prototype.extract = function () {\n\t\treturn flatten(this);\n\t};\n\n\tfunction factory() {\n\t\tfor (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t\t\targs[_key2] = arguments[_key2];\n\t\t}\n\n\t\treturn new (Function.prototype.bind.apply(Tuple, [null].concat(args)))();\n\t}\n\n\tfactory.version = \"1.0.8\";\n\n\t// Node, AMD & window supported\n\tif (typeof exports !== \"undefined\") {\n\t\tmodule.exports = factory;\n\t} else if (typeof define === \"function\" && define.amd) {\n\t\tdefine(function () {\n\t\t\treturn factory;\n\t\t});\n\t} else {\n\t\tglobal.tuple = factory;\n\t}\n})(typeof window !== \"undefined\" ? window : global);\n"]}